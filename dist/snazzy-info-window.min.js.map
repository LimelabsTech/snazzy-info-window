{"version":3,"sources":["snazzy-info-window.js"],"names":["copyKeys","target","source","Object","keys","forEach","key","mergeDefaultOptions","opts","copy","_defaultOptions","obj","_typeof","objCopy","parseAttribute","attribute","defaultValue","re","test","match","exec","value","units","original","setHTML","container","content","firstChild","removeChild","innerHTML","appendChild","oppositePlacement","p","capitalizePlacement","charAt","toUpperCase","slice","toLatLng","v","undefined","google","maps","LatLng","lat","lng","_defaultShadow","h","blur","spread","color","placement","pointer","openOnMarkerClick","openOnMarkerMouseover","closeOnMapClick","closeWhenOthersOpen","showCloseButton","panOnOpen","edgeOffset","top","right","bottom","left","SnazzyInfoWindow","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","call","_html","_opts","_callbacks","callbacks","_marker","marker","_map","map","_position","position","_isOpen","_listeners","trackListener","event","addListener","getMap","open","console","log","close","offset","String","toLowerCase","border","shadow","callback","lambda","apply","listener","persistent","push","clearPersistent","e","removeListener","filter","result","activateCallback","setMap","clearListeners","latLng","draw","resize","reposition","wrapper","style","marginLeft","marginTop","bg","backgroundColor","contentWrapper","pointerBg","padding","shadowFrame","borderRadius","fontSize","fontColor","shadowPointer","width","height","pointerBorder","borderWidth","bWidth","Math","round","offsetWidth","clientWidth","pLength","min","offsetHeight","triangleDiff","reverseP","borderColor","isSet","hOffset","vOffset","formatBoxShadow","boxShadow","hRotated","vRotated","shadowPointerInner","opacity","shadowWrapper","divPixel","getProjection","fromLatLngToDivPixel","floatWrapper","floor","y","x","trigger","_eventPrefix","_this2","applyCss","element","args","i","length","className","newElement","_len","arguments","Array","_key","document","createElement","wrapperClass","closeButtonMarkup","d","closeButton","setAttribute","getPanes","floatPane","other","_previousWidth","_previousHeight","getDiv","ow","oh","pw","ph","addDomListener","cancelBubble","stopPropagation","parent","parentElement","mb","getBoundingClientRect","mib","getMapInnerBounds","wb","dx","dy","panBy","maxWidth","maxHeight","OverlayView"],"mappings":"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","file":"snazzy-info-window.min.js","sourcesContent":["// Global variables\nconst _classPrefix = 'si-';\nconst _root2 = 1.41421356237;\nconst _inverseRoot2 = 0.7071067811865474;\nconst _eventPrefix = 'snazzy-info-window-';\nconst _defaultShadow = {\n    h: '0px',\n    v: '3px',\n    blur: '6px',\n    spread: '0px',\n    color: '#000'\n};\nconst _defaultOptions = {\n    placement: 'top',\n    pointer: true,\n    openOnMarkerClick: false,\n    openOnMarkerMouseover: true,\n    closeOnMapClick: true,\n    closeWhenOthersOpen: false,\n    showCloseButton: true,\n    panOnOpen: true,\n    edgeOffset: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n    }\n};\n\n// Copy keys from the source into the target\nfunction copyKeys(target, source) {\n    if (target && source) {\n        Object.keys(source).forEach((key) => {\n            target[key] = source[key];\n        });\n    }\n}\n\n// We need to safely merge options from the defaults. This will make\n// sure settings like edgeOffset are properly assigned.\nfunction mergeDefaultOptions(opts) {\n    const copy = {};\n    copyKeys(copy, _defaultOptions);\n    copyKeys(copy, opts);\n    Object.keys(_defaultOptions).forEach((key) => {\n        const obj = _defaultOptions[key];\n        if (typeof obj === 'object') {\n            const objCopy = {};\n            copyKeys(objCopy, obj);\n            copyKeys(objCopy, copy[key]);\n            copy[key] = objCopy;\n        }\n    });\n    return copy;\n}\n\n// Parse a css attribute into the numeric portion and the units\nfunction parseAttribute(attribute, defaultValue) {\n    // 1em, 1.0em, 0.1em, .1em, 1.    em\n    const re = /^(-{0,1}\\.{0,1}\\d+(\\.\\d+)?)[\\s|\\.]*(\\w*)$/;\n    if (attribute && re.test(attribute)) {\n        const match = re.exec(attribute);\n        const number = match[1];\n        const units = match[3] || 'px';\n        return {value: number * 1, units, original: attribute};\n    }\n    if (defaultValue) {\n        return parseAttribute(defaultValue);\n    }\n    return {original: defaultValue};\n}\n\n// Set the html of a container. Should support both raw text and a single\n// DOM Element.\nfunction setHTML(container, content) {\n    if (container) {\n        // Clear out everything in the container\n        while (container.firstChild) {\n            container.removeChild(container.firstChild);\n        }\n        if (content) {\n            if (typeof content === 'string') {\n                container.innerHTML = content;\n            } else {\n                container.appendChild(content);\n            }\n        }\n    }\n}\n\n// Get the opposite of a given placement\nfunction oppositePlacement(p) {\n    if (p === 'top') {\n        return 'bottom';\n    } else if (p === 'bottom') {\n        return 'top';\n    } else if (p === 'left') {\n        return 'right';\n    } else if (p === 'right') {\n        return 'left';\n    }\n    return p;\n}\n\n// Return the placement with the first letter capitalized\nfunction capitalizePlacement(p) {\n    return p.charAt(0).toUpperCase() + p.slice(1);\n}\n\n// Convert the value into a Google Map LatLng\nfunction toLatLng(v) {\n    if (v !== undefined && v !== null && google) {\n        if (v instanceof google.maps.LatLng) {\n            return v;\n        } else if (v.lat !== undefined && v.lng !== undefined) {\n            return new google.maps.LatLng(v);\n        }\n    }\n    return null;\n}\n\nexport default class SnazzyInfoWindow extends google.maps.OverlayView {\n\n    constructor(opts) {\n        super(opts);\n        // Private properties\n        this._html = null;\n        this._opts = mergeDefaultOptions(opts);\n        this._callbacks = this._opts.callbacks || {};\n        this._marker = this._opts.marker;\n        this._map = this._opts.map;\n        this._position = toLatLng(this._opts.position);\n        this._isOpen = false;\n        this._listeners = [];\n\n        // This listener remains active when the info window is closed.\n        if (google && this._marker && this._opts.openOnMarkerClick) {\n            this.trackListener(google.maps.event.addListener(this._marker, 'click', () => {\n                if (!this.getMap()) {\n                    this.open();\n                }\n            }), true);\n        }\n\n        // This listener remains active when the info window is closed.\n        if (google && this._marker && this._opts.openOnMarkerMouseover) {\n            this.trackListener(google.maps.event.addListener(this._marker, 'mouseover', () => {\n                if (!this.getMap()) {\n                    this.open();\n                    console.log(this._marker);\n                }\n            }), true);\n        }\n\n        if (google && this._marker && this._opts.openOnMarkerMouseover) {\n            this.trackListener(google.maps.event.addListener(this._marker, 'mouseout', () => {\n                this.close();\n            }), true);\n        }\n\n        // When using a position the default option for the offset is 0\n        if (this._position && !this._opts.offset) {\n            this._opts.offset = {\n                top: '0px',\n                left: '0px'\n            };\n        }\n\n        // Validate the placement option\n        let p = opts.placement || this._opts.position;\n        // The position variable was renamed to placement so we must type check\n        if (typeof p === 'string' || p instanceof String) {\n            p = p.toLowerCase();\n        }\n        if (p !== 'top' && p !== 'bottom' &&\n            p !== 'left' && p !== 'right') {\n            this._opts.placement = _defaultOptions.placement;\n        } else {\n            this._opts.placement = p;\n        }\n\n        // Validate the position option\n        p = this._opts.position;\n        if (p !== undefined && p !== null &&\n            typeof p !== 'string' && !(p instanceof String)) {\n            this._opts.position = p;\n        }\n\n        // Validate the other options\n        if (this._opts.border === undefined || this._opts.border === true) {\n            this._opts.border = {};\n        }\n        if (this._opts.pointer === undefined) {\n            this._opts.pointer = _defaultOptions.pointer;\n        }\n        if (this._opts.shadow === undefined || this._opts.shadow === true) {\n            this._opts.shadow = {};\n        }\n    }\n\n    // Activate the specified callback and return the result\n    activateCallback(callback) {\n        const lambda = this._callbacks[callback];\n        return lambda ? lambda.apply(this) : undefined;\n    }\n\n    // Track the provided listener. A persistent listener means it remains\n    // tracked even if the info window is closed.\n    trackListener(listener, persistent) {\n        this._listeners.push({listener, persistent});\n    }\n\n    // Will clear all listeners that are used during the open state.\n    clearListeners(clearPersistent) {\n        if (google) {\n            if (this._listeners) {\n                this._listeners.forEach((e) => {\n                    if (clearPersistent || !e.persistent) {\n                        google.maps.event.removeListener(e.listener);\n                        e.listener = null;\n                    }\n                });\n                this._listeners = this._listeners.filter((e) => {\n                    return e.listener != null;\n                });\n            }\n        }\n    }\n\n    isOpen() {\n        return this._isOpen;\n    }\n\n    // Open the info window after attaching to a specific marker.\n    open() {\n        const result = this.activateCallback('beforeOpen');\n        if (result !== undefined && !result) {\n            return;\n        }\n        if (this._marker) {\n            this.setMap(this._marker.getMap());\n        } else if (this._map && this._position) {\n            this.setMap(this._map);\n        }\n    }\n\n    // Close the info window.\n    close() {\n        const result = this.activateCallback('beforeClose');\n        if (result !== undefined && !result) {\n            return;\n        }\n        this.clearListeners();\n        this.setMap(null);\n    }\n\n    // Force close the map and remove any event listeners attached to google\n    destroy() {\n        if (this.getMap()) {\n            this.setMap(null);\n        }\n        // Make sure to clear all persistent listeners\n        this.clearListeners(true);\n    }\n\n    setContent(content) {\n        this._opts.content = content;\n        if (this._html && this._html.content) {\n            setHTML(this._html.content, content);\n        }\n    }\n\n    setPosition(latLng) {\n        this._position = toLatLng(latLng);\n        if (this._isOpen && this._position) {\n            this.draw();\n            this.resize();\n            this.reposition();\n        }\n    }\n\n    getWrapper() {\n        if (this._html) {\n            return this._html.wrapper;\n        }\n        return null;\n    }\n\n    // Implementation of OverlayView draw method.\n    draw() {\n        if (!this.getMap() || !this._html) {\n            return;\n        }\n        if (!this._marker && !this._position) {\n            return;\n        }\n\n        // 1. Assign offset\n        const offset = this._opts.offset;\n        if (offset) {\n            if (offset.left) {\n                this._html.wrapper.style.marginLeft = offset.left;\n            }\n            if (offset.top) {\n                this._html.wrapper.style.marginTop = offset.top;\n            }\n        }\n        // 2. Set the background color\n        const bg = this._opts.backgroundColor;\n        if (bg) {\n            this._html.contentWrapper.style.backgroundColor = bg;\n            if (this._opts.pointer) {\n                this._html.pointerBg.style[`border${capitalizePlacement(this._opts.placement)}Color`] = bg;\n            }\n        }\n        // 3. Padding\n        if (this._opts.padding) {\n            this._html.contentWrapper.style.padding = this._opts.padding;\n            if (this._opts.shadow) {\n                this._html.shadowFrame.style.padding = this._opts.padding;\n            }\n        }\n        // 4. Border radius\n        if (this._opts.borderRadius) {\n            this._html.contentWrapper.style.borderRadius = this._opts.borderRadius;\n            if (this._opts.shadow) {\n                this._html.shadowFrame.style.borderRadius = this._opts.borderRadius;\n            }\n        }\n        // 5. Font Size\n        if (this._opts.fontSize) {\n            this._html.wrapper.style.fontSize = this._opts.fontSize;\n        }\n        // 6. Font Color\n        if (this._opts.fontColor) {\n            this._html.contentWrapper.style.color = this._opts.fontColor;\n        }\n        // 7. Pointer\n        // Check if the pointer is enabled. Also make sure the value isn't just the boolean true.\n        if (this._opts.pointer && this._opts.pointer !== true) {\n            if (this._opts.shadow) {\n                this._html.shadowPointer.style.width = this._opts.pointer;\n                this._html.shadowPointer.style.height = this._opts.pointer;\n            }\n            if (this._html.pointerBorder) {\n                this._html.pointerBorder.style.borderWidth = this._opts.pointer;\n            }\n            this._html.pointerBg.style.borderWidth = this._opts.pointer;\n        }\n\n        // 8. Border\n        if (this._opts.border) {\n            // Calculate the border width\n            let bWidth = 0;\n            if (this._opts.border.width !== undefined) {\n                bWidth = parseAttribute(this._opts.border.width, '0px');\n                this._html.contentWrapper.style.borderWidth = bWidth.value + bWidth.units;\n            }\n            bWidth = Math.round((this._html.contentWrapper.offsetWidth -\n                this._html.contentWrapper.clientWidth) / 2.0);\n            bWidth = parseAttribute(`${bWidth}px`, '0px');\n\n            if (this._opts.pointer) {\n                // Calculate the pointer length\n                let pLength = Math.min(this._html.pointerBorder.offsetHeight,\n                    this._html.pointerBorder.offsetWidth);\n                pLength = parseAttribute(`${pLength}px`, '0px');\n\n                let triangleDiff = Math.round(bWidth.value * (_root2 - 1));\n                triangleDiff = Math.min(triangleDiff, pLength.value);\n\n                this._html.pointerBg.style.borderWidth =\n                    (pLength.value - triangleDiff) + pLength.units;\n\n                const reverseP = capitalizePlacement(oppositePlacement(this._opts.placement));\n                this._html.pointerBg.style[`margin${reverseP}`] =\n                    triangleDiff + bWidth.units;\n                this._html.pointerBg.style[this._opts.placement] =\n                    -bWidth.value + bWidth.units;\n            }\n            const color = this._opts.border.color;\n            if (color) {\n                this._html.contentWrapper.style.borderColor = color;\n                if (this._html.pointerBorder) {\n                    this._html.pointerBorder.style[`border${capitalizePlacement(this._opts.placement)}Color`] = color;\n                }\n            }\n        }\n        // 9. Shadow\n        if (this._opts.shadow) {\n            // Check if any of the shadow settings have actually been set\n            const shadow = this._opts.shadow;\n            const isSet = (attribute) => {\n                const v = shadow[attribute];\n                return v !== undefined && v != null;\n            };\n\n            if (isSet('h') || isSet('v') || isSet('blur') || isSet('spread') || isSet('color')) {\n                const hOffset = parseAttribute(shadow.h, _defaultShadow.h);\n                const vOffset = parseAttribute(shadow.v, _defaultShadow.v);\n                const blur = parseAttribute(shadow.blur, _defaultShadow.blur);\n                const spread = parseAttribute(shadow.spread, _defaultShadow.spread);\n                const color = shadow.color || _defaultShadow.color;\n                const formatBoxShadow = (h, v) => {\n                    return `${h} ${v} ${blur.original} ${spread.original} ${color}`;\n                };\n\n                this._html.shadowFrame.style.boxShadow =\n                    formatBoxShadow(hOffset.original, vOffset.original);\n\n                // Correctly rotate the shadows before the css transform\n                const hRotated = (_inverseRoot2 * (hOffset.value - vOffset.value)) + hOffset.units;\n                const vRotated = (_inverseRoot2 * (hOffset.value + vOffset.value)) + vOffset.units;\n                this._html.shadowPointerInner.style.boxShadow = formatBoxShadow(hRotated, vRotated);\n            }\n            if (this._opts.shadow.opacity) {\n                this._html.shadowWrapper.style.opacity = this._opts.shadow.opacity;\n            }\n        }\n\n        const divPixel = this.getProjection()\n            .fromLatLngToDivPixel(this._position || this._marker.position);\n        if (divPixel) {\n            this._html.floatWrapper.style.top = `${Math.floor(divPixel.y)}px`;\n            this._html.floatWrapper.style.left = `${Math.floor(divPixel.x)}px`;\n        }\n        if (!this._isOpen) {\n            this._isOpen = true;\n            this.resize();\n            this.reposition();\n            this.activateCallback('afterOpen');\n            if (google) {\n                google.maps.event.trigger(this.getMap(), `${_eventPrefix}opened`, this);\n            }\n        }\n    }\n\n    // Implementation of OverlayView onAdd method.\n    onAdd() {\n        if (this._html) {\n            return;\n        }\n        // Used for creating new elements\n        const applyCss = (element, args) => {\n            if (element && args) {\n                for (let i = 0; i < args.length; i++) {\n                    const className = args[i];\n                    if (className) {\n                        if (element.className) {\n                            element.className += ' ';\n                        }\n                        element.className += _classPrefix + className;\n                    }\n                }\n            }\n        };\n        const newElement = (...args) => {\n            const element = document.createElement('div');\n            applyCss(element, args);\n            return element;\n        };\n\n        this._html = {};\n\n        // 1. Create the wrapper\n        this._html.wrapper = newElement(\n            `wrapper-${this._opts.placement}`\n        );\n        if (this._opts.wrapperClass) {\n            this._html.wrapper.className += ` ${this._opts.wrapperClass}`;\n        }\n        if (this._opts.border) {\n            applyCss(this._html.wrapper, ['has-border']);\n        }\n\n        // 2. Create the shadow\n        if (this._opts.shadow) {\n            this._html.shadowWrapper = newElement(\n                `shadow-wrapper-${this._opts.placement}`\n            );\n            this._html.shadowFrame = newElement(\n                'frame',\n                'shadow-frame'\n            );\n            this._html.shadowWrapper.appendChild(this._html.shadowFrame);\n\n            if (this._opts.pointer) {\n                this._html.shadowPointer = newElement(\n                    `shadow-pointer-${this._opts.placement}`\n                );\n                this._html.shadowPointerInner = newElement(\n                    `shadow-inner-pointer-${this._opts.placement}`\n                );\n                this._html.shadowPointer.appendChild(this._html.shadowPointerInner);\n                this._html.shadowWrapper.appendChild(this._html.shadowPointer);\n            }\n\n            this._html.wrapper.appendChild(this._html.shadowWrapper);\n        }\n\n        // 3. Create the content\n        this._html.contentWrapper = newElement(\n            'frame',\n            'content-wrapper'\n        );\n        this._html.content = newElement(\n            'content'\n        );\n        if (this._opts.content) {\n            setHTML(this._html.content, this._opts.content);\n        }\n\n        // 4. Create the close button\n        if (this._opts.showCloseButton) {\n            if (this._opts.closeButtonMarkup) {\n                const d = document.createElement('div');\n                setHTML(d, this._opts.closeButtonMarkup);\n                this._html.closeButton = d.firstChild;\n            } else {\n                this._html.closeButton = document.createElement('button');\n                this._html.closeButton.setAttribute('type', 'button');\n                this._html.closeButton.innerHTML = '&#215;';\n                applyCss(this._html.closeButton, ['close-button']);\n            }\n            this._html.contentWrapper.appendChild(this._html.closeButton);\n        }\n        this._html.contentWrapper.appendChild(this._html.content);\n        this._html.wrapper.appendChild(this._html.contentWrapper);\n\n        // 5. Create the pointer\n        if (this._opts.pointer) {\n            if (this._opts.border) {\n                this._html.pointerBorder = newElement(\n                    `pointer-${this._opts.placement}`,\n                    `pointer-border-${this._opts.placement}`\n                );\n                this._html.wrapper.appendChild(this._html.pointerBorder);\n            }\n            this._html.pointerBg = newElement(\n                `pointer-${this._opts.placement}`,\n                `pointer-bg-${this._opts.placement}`\n            );\n            this._html.wrapper.appendChild(this._html.pointerBg);\n        }\n\n        // Create an outer wrapper\n        this._html.floatWrapper = newElement(\n            'float-wrapper'\n        );\n        this._html.floatWrapper.appendChild(this._html.wrapper);\n\n        // Add the wrapper to the Google Maps float pane\n        this.getPanes().floatPane.appendChild(this._html.floatWrapper);\n\n        // Now add all the event listeners\n        const map = this.getMap();\n        this.clearListeners();\n        if (this._opts.closeOnMapClick) {\n            this.trackListener(google.maps.event.addListener(map, 'click', () => {\n                this.close();\n            }));\n        }\n        if (this._opts.closeWhenOthersOpen) {\n            this.trackListener(google.maps.event.addListener(map, `${_eventPrefix}opened`, (other) => {\n                if (this !== other) {\n                    this.close();\n                }\n            }));\n        }\n        if (google) {\n            // Clear out the previous map bounds\n            this._previousWidth = null;\n            this._previousHeight = null;\n            this.trackListener(google.maps.event.addListener(map, 'bounds_changed', () => {\n                const d = map.getDiv();\n                const ow = d.offsetWidth;\n                const oh = d.offsetHeight;\n                const pw = this._previousWidth;\n                const ph = this._previousHeight;\n                if (pw === null || ph === null || pw !== ow || ph !== oh) {\n                    this._previousWidth = ow;\n                    this._previousHeight = oh;\n                    this.resize();\n                }\n            }));\n\n            // Marker moves\n            if (this._marker) {\n                this.trackListener(google.maps.event.addListener(this._marker,\n                    'position_changed', () => {\n                        this.draw();\n                    }));\n            }\n\n            // Close button\n            if (this._opts.showCloseButton && !this._opts.closeButtonMarkup) {\n                this.trackListener(google.maps.event.addDomListener(this._html.closeButton,\n                    'click', (e) => {\n                        e.cancelBubble = true;\n                        if (e.stopPropagation) {\n                            e.stopPropagation();\n                        }\n                        this.close();\n                    }));\n            }\n\n            // Stop the mouse event propagation\n            const mouseEvents = ['click', 'dblclick', 'rightclick', 'contextmenu',\n                'drag', 'dragend', 'dragstart',\n                'mousedown', 'mouseout', 'mouseover', 'mouseup',\n                'touchstart', 'touchend', 'touchmove',\n                'wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'];\n            mouseEvents.forEach((event) => {\n                this.trackListener(google.maps.event.addDomListener(this._html.wrapper,\n                    event, (e) => {\n                        e.cancelBubble = true;\n                        if (e.stopPropagation) {\n                            e.stopPropagation();\n                        }\n                    }));\n            });\n        }\n\n\n        this.activateCallback('open');\n    }\n\n    // Implementation of OverlayView onRemove method\n    onRemove() {\n        this.activateCallback('close');\n        if (this._html) {\n            const parent = this._html.floatWrapper.parentElement;\n            if (parent) {\n                parent.removeChild(this._html.floatWrapper);\n            }\n            this._html = null;\n        }\n        this._isOpen = false;\n        this.activateCallback('afterClose');\n    }\n\n    // The map inner bounds used for panning and resizing\n    getMapInnerBounds() {\n        const mb = this.getMap().getDiv().getBoundingClientRect();\n        const mib = {\n            top: mb.top + this._opts.edgeOffset.top,\n            right: mb.right - this._opts.edgeOffset.right,\n            bottom: mb.bottom - this._opts.edgeOffset.bottom,\n            left: mb.left + this._opts.edgeOffset.left\n        };\n        mib.width = mib.right - mib.left;\n        mib.height = mib.bottom - mib.top;\n        return mib;\n    }\n\n    // Pan the Google Map such that the info window is visible\n    reposition() {\n        if (!this._opts.panOnOpen || !this._html) {\n            return;\n        }\n        const mib = this.getMapInnerBounds();\n        const wb = this._html.wrapper.getBoundingClientRect();\n        let dx = 0;\n        let dy = 0;\n        if (mib.left >= wb.left) {\n            dx = wb.left - mib.left;\n        } else if (mib.right <= wb.right) {\n            dx = wb.left - (mib.right - wb.width);\n        }\n        if (mib.top >= wb.top) {\n            dy = wb.top - mib.top;\n        } else if (mib.bottom <= wb.bottom) {\n            dy = wb.top - (mib.bottom - wb.height);\n        }\n        if (dx !== 0 || dy !== 0) {\n            this.getMap().panBy(dx, dy);\n        }\n    }\n\n    // Resize the info window to fit within the map bounds and edge offset\n    resize() {\n        if (!this._html) {\n            return;\n        }\n        const mib = this.getMapInnerBounds();\n        // Handle the max width\n        let maxWidth = mib.width;\n        if (this._opts.maxWidth !== undefined) {\n            maxWidth = Math.min(maxWidth, this._opts.maxWidth);\n        }\n        maxWidth -= (this._html.wrapper.offsetWidth - this._html.content.offsetWidth);\n        this._html.content.style.maxWidth = `${maxWidth}px`;\n\n        // Handle the max height\n        let maxHeight = mib.height;\n        if (this._opts.maxHeight !== undefined) {\n            maxHeight = Math.min(maxHeight, this._opts.maxHeight);\n        }\n        maxHeight -= (this._html.wrapper.offsetHeight - this._html.content.offsetHeight);\n        this._html.content.style.maxHeight = `${maxHeight}px`;\n    }\n}\n"]}